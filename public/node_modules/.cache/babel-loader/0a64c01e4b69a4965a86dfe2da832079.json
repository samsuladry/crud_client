{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\Work\\\\Reactjs\\\\crud_app\\\\client\\\\src\\\\Component\\\\Todo\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { VStack, StackDivider } from '@chakra-ui/react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\nimport { DELETE_TODOS } from '../../Graphql/Mutation'; // import { useQuery, useMutation } from \"@apollo/client\" // use this to query from db\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = todos => {\n  _s();\n\n  const {\n    data\n  } = useQuery(GET_ALL_TODOS); // const [todos, setTodos] = useState([])\n\n  const [deleteTodos, delTodo] = useMutation(DELETE_TODOS);\n  const delData = delTodo.data; // useEffect(() => {\n  //     if(data)\n  //     {\n  //         setTodos(data.getAllTodos)\n  //     }\n  // }, [data])\n\n  const deleteTodo = async id => {\n    // console.log(id)\n    let parseId = parseInt(id);\n    await deleteTodos({\n      variables: {\n        id: parseId\n      }\n    });\n    window.location.reload(); // console.log(data)\n  }; // const [todos, setTodos] = useState(initialTodos)\n  // if(!todos.length)\n  // {\n  //     return(\n  //         <Badge colorScheme=\"green\" p='5' m='5' borderRadius='lg'>\n  //             No Todos\n  //         </Badge>\n  //     )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this),\n      borderColor: \"gray.300\",\n      borderWidth: \"2px\",\n      p: \"4\",\n      borderRadius: \"lg\",\n      width: \"100%\",\n      maxW: {\n        base: '90vw',\n        sm: '100vw',\n        lg: '150vw',\n        xl: '180vw'\n      },\n      alignItems: \"stretch\",\n      children: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"C+RWqhzmYSfTTOvVcim6d9EyZ3M=\", false, function () {\n  return [useQuery, useMutation];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/laragon/www/Work/Reactjs/crud_app/client/src/Component/Todo/TodoList.tsx"],"names":["React","VStack","StackDivider","useQuery","useMutation","GET_ALL_TODOS","DELETE_TODOS","TodoList","todos","data","deleteTodos","delTodo","delData","deleteTodo","id","parseId","parseInt","variables","window","location","reload","base","sm","lg","xl"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAAgBC,MAAhB,EAAkDC,YAAlD,QAA8E,kBAA9E;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,QAA6B,wBAA7B,C,CACA;;;AAWA,OAAO,MAAMC,QAAyB,GAAIC,KAAD,IAA4B;AAAA;;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAWN,QAAQ,CAACE,aAAD,CAAzB,CADiE,CAEjE;;AAEA,QAAM,CAACK,WAAD,EAAcC,OAAd,IAAyBP,WAAW,CAACE,YAAD,CAA1C;AACA,QAAMM,OAAO,GAAGD,OAAO,CAACF,IAAxB,CALiE,CAOjE;AACA;AACA;AACA;AACA;AAEA;;AAEA,QAAMI,UAAU,GAAE,MAAOC,EAAP,IAClB;AACI;AACA,QAAIC,OAAO,GAAGC,QAAQ,CAACF,EAAD,CAAtB;AACA,UAAMJ,WAAW,CAAC;AACdO,MAAAA,SAAS,EACT;AACIH,QAAAA,EAAE,EAAEC;AADR;AAFc,KAAD,CAAjB;AAMAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GATJ,CAUI;AACH,GAZD,CAfiE,CA6BjE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACA;AAAA,2BACI,QAAC,MAAD;AACA,MAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADT;AAEA,MAAA,WAAW,EAAC,UAFZ;AAGA,MAAA,WAAW,EAAC,KAHZ;AAIA,MAAA,CAAC,EAAC,GAJF;AAKA,MAAA,YAAY,EAAC,IALb;AAMA,MAAA,KAAK,EAAC,MANN;AAOA,MAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE,OAApB;AAA6BC,QAAAA,EAAE,EAAE,OAAjC;AAA0CC,QAAAA,EAAE,EAAE;AAA9C,OAPN;AAQA,MAAA,UAAU,EAAC,SARX;AAAA,gBAUKhB;AAVL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAmCH,CA3EM;;GAAMD,Q;UACQJ,Q,EAGcC,W;;;KAJtBG,Q","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Badge, VStack, Text, HStack, IconButton, StackDivider, Spacer } from '@chakra-ui/react'\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\r\nimport { DELETE_TODOS } from '../../Graphql/Mutation';\r\n// import { useQuery, useMutation } from \"@apollo/client\" // use this to query from db\r\n\r\ninterface Todo {\r\n    body: string;\r\n    id: number;\r\n  }\r\n  \r\n  interface props {\r\n    items?: Todo[]\r\n  }\r\n\r\nexport const TodoList: React.FC<props> = (todos: props | never[]) => {\r\n    const { data } = useQuery(GET_ALL_TODOS)\r\n    // const [todos, setTodos] = useState([])\r\n\r\n    const [deleteTodos, delTodo] = useMutation(DELETE_TODOS)\r\n    const delData = delTodo.data\r\n\r\n    // useEffect(() => {\r\n    //     if(data)\r\n    //     {\r\n    //         setTodos(data.getAllTodos)\r\n    //     }\r\n        \r\n    // }, [data])\r\n    \r\n    const deleteTodo =async (id: any) =>\r\n    {\r\n        // console.log(id)\r\n        let parseId = parseInt(id)\r\n        await deleteTodos({\r\n            variables:\r\n            {\r\n                id: parseId\r\n            }\r\n        })\r\n        window.location.reload()\r\n        // console.log(data)\r\n    }\r\n\r\n    // const [todos, setTodos] = useState(initialTodos)\r\n\r\n    // if(!todos.length)\r\n    // {\r\n    //     return(\r\n    //         <Badge colorScheme=\"green\" p='5' m='5' borderRadius='lg'>\r\n    //             No Todos\r\n    //         </Badge>\r\n    //     )\r\n    // }\r\n    \r\n    return( \r\n    <div>\r\n        <VStack\r\n        divider={<StackDivider />}\r\n        borderColor='gray.300'\r\n        borderWidth='2px'\r\n        p='4'\r\n        borderRadius='lg'\r\n        width=\"100%\"\r\n        maxW={{ base: '90vw', sm: '100vw', lg: '150vw', xl: '180vw' }}\r\n        alignItems='stretch'\r\n        >\r\n            {todos}\r\n            {/* {todos.map((todo: any) =>\r\n            {\r\n                return (\r\n                    <HStack key={todo.id}>\r\n                        <Text>{todo.body}</Text>\r\n                        <Spacer/>\r\n                        <IconButton \r\n                        aria-label=\"Delete\" \r\n                        icon={ <FaTrash/>}\r\n                        isRound={true}\r\n                        onClick = {() => {  deleteTodo(todo.id) }}/>\r\n                    </HStack>\r\n                )\r\n            })} */}\r\n            {/* {todos.map((val: any) =>\r\n            {\r\n                return <h1 key= {val.id}>{val.body}</h1>\r\n            })} */}\r\n        </VStack>\r\n    </div>\r\n    );\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}