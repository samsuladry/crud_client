{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\Work\\\\Reactjs\\\\crud_app\\\\client\\\\src\\\\Component\\\\Todo\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TODOS } from '../../Graphql/Queries'; // import { useQuery, useMutation } from \"@apollo/client\" // use this to query from db\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(GET_ALL_TODOS); // const initialTodos = [ \n  //     {\n  //         id: 1,\n  //         body: \"Todo 1 \"  \n  //     },\n  //     {\n  //         id: 2,\n  //         body: \"Todo 2\"\n  //     },\n  // ];\n  // const deleteTodo = (id: number) =>\n  // {\n  //     const newTodos = todos.filter((todo) =>\n  //     {\n  //         return todo.id !== id;\n  //     })\n  //     setTodos(newTodos)\n  // }\n  // const [todos, setTodos] = useState(initialTodos)\n  // if(!todos.length)\n  // {\n  //     return(\n  //         <Badge colorScheme=\"green\" p='5' m='5' borderRadius='lg'>\n  //             No Todos\n  //         </Badge>\n  //     )\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <VStack\n    //     divider={<StackDivider />}\n    //     borderColor='gray.300'\n    //     borderWidth='2px'\n    //     p='4'\n    //     borderRadius='lg'\n    //     width=\"100%\"\n    //     maxW={{ base: '90vw', sm: '100vw', lg: '150vw', xl: '180vw' }}\n    //     alignItems='stretch'\n    //     >\n    //         {data && data.getAllTodos.map((todo: any) =>\n    //         {\n    //             <HStack key={todo.id}>\n    //                 <Text>{todo.body}</Text>\n    //                 <Spacer/>\n    //                 <IconButton \n    //                 aria-label=\"Delete\" \n    //                 icon={ <FaTrash/>}\n    //                 isRound={true}\n    //                 onClick = {() => { console.log(todo.id)}}/>\n    //             </HStack>\n    //         })}\n    //     </VStack>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: data && data.getAllTodos.map(user => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(user.body), \"\\xA0\"]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(TodoList, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/laragon/www/Work/Reactjs/crud_app/client/src/Component/Todo/TodoList.tsx"],"names":["React","useQuery","GET_ALL_TODOS","TodoList","data","getAllTodos","map","user","console","log","body","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAGA,SAASC,QAAT,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,uBAA9B,C,CACA;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAQ,CAACC,aAAD,CAAzB,CAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,gBACKE,IAAI,IAAIA,IAAI,CAACC,WAAL,CAAiBC,GAAjB,CAAsBC,IAAD,IAC9B;AACI,4BACI;AAAA,qBACKC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,CADL;AAAA,WAAYH,IAAI,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAQH,OAVQ;AADb;AAAA;AAAA;AAAA;AAAA;AA1BA;AAyCH,CA1EM;;GAAMR,Q;UACQF,Q;;;KADRE,Q","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Badge, VStack, Text, HStack, IconButton, StackDivider, Spacer } from '@chakra-ui/react'\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\r\n// import { useQuery, useMutation } from \"@apollo/client\" // use this to query from db\r\n\r\nexport const TodoList = () => {\r\n    const { data } = useQuery(GET_ALL_TODOS)\r\n    // const initialTodos = [ \r\n    //     {\r\n    //         id: 1,\r\n    //         body: \"Todo 1 \"  \r\n    //     },\r\n    //     {\r\n    //         id: 2,\r\n    //         body: \"Todo 2\"\r\n    //     },\r\n    // ];\r\n    \r\n    // const deleteTodo = (id: number) =>\r\n    // {\r\n    //     const newTodos = todos.filter((todo) =>\r\n    //     {\r\n    //         return todo.id !== id;\r\n    //     })\r\n    //     setTodos(newTodos)\r\n    // }\r\n\r\n    // const [todos, setTodos] = useState(initialTodos)\r\n\r\n    // if(!todos.length)\r\n    // {\r\n    //     return(\r\n    //         <Badge colorScheme=\"green\" p='5' m='5' borderRadius='lg'>\r\n    //             No Todos\r\n    //         </Badge>\r\n    //     )\r\n    // }\r\n    \r\n    return( \r\n    // <div>\r\n    //     <VStack\r\n    //     divider={<StackDivider />}\r\n    //     borderColor='gray.300'\r\n    //     borderWidth='2px'\r\n    //     p='4'\r\n    //     borderRadius='lg'\r\n    //     width=\"100%\"\r\n    //     maxW={{ base: '90vw', sm: '100vw', lg: '150vw', xl: '180vw' }}\r\n    //     alignItems='stretch'\r\n    //     >\r\n    //         {data && data.getAllTodos.map((todo: any) =>\r\n    //         {\r\n    //             <HStack key={todo.id}>\r\n    //                 <Text>{todo.body}</Text>\r\n    //                 <Spacer/>\r\n    //                 <IconButton \r\n    //                 aria-label=\"Delete\" \r\n    //                 icon={ <FaTrash/>}\r\n    //                 isRound={true}\r\n    //                 onClick = {() => { console.log(todo.id)}}/>\r\n    //             </HStack>\r\n    //         })}\r\n    //     </VStack>\r\n    // </div>\r\n    <div>\r\n        {data && data.getAllTodos.map((user: any) => \r\n        {\r\n            return (\r\n                <div key = {user.id}>\r\n                    {console.log(user.body)}\r\n                    &nbsp;\r\n                    {/* <Button size=\"md\" colorScheme=\"red\" onClick= { () => deleteThisUser({ variables: { name: user.name, password: user.password} }) }>Delete</Button> */}\r\n                    {/* <Button size=\"md\" colorScheme=\"red\" onClick= { () => deleteUser(user.name, \"123456\") }>Delete</Button> */}\r\n                </div>\r\n            )\r\n        })}\r\n    </div>\r\n    );\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}