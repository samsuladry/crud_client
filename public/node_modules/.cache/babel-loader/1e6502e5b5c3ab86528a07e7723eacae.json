{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\Work\\\\Reactjs\\\\crud_app\\\\client\\\\src\\\\Component\\\\Todo\\\\Todo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Heading, VStack, IconButton, useColorMode } from '@chakra-ui/react';\nimport { TodoList } from \"./TodoList\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\nimport { DELETE_TODOS } from '../../Graphql/Mutation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = () => {\n  _s();\n\n  const {\n    colorMode,\n    toggleColorMode\n  } = useColorMode();\n  const {\n    data\n  } = useQuery(GET_ALL_TODOS);\n  const [todos, setTodos] = useState([]);\n  const [id, setId] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [deleteTodos, delTodo] = useMutation(DELETE_TODOS);\n  const delData = delTodo.data;\n  useEffect(() => {\n    if (data) {\n      setTodos(data.getAllTodos); // setId(data.getAllTodos.id)\n    }\n  }, [data]);\n\n  const deleteTodo = async id => {\n    // console.log(id)\n    let parseId = parseInt(id);\n    await deleteTodos({\n      variables: {\n        id: parseId\n      }\n    });\n    window.location.reload(); // console.log(data)\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"Night Mode\",\n      icon: colorMode === 'light' ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 48\n      }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 58\n      }, this),\n      isRound: true,\n      size: \"lg\",\n      alignSelf: \"flex-end\",\n      onClick: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      mb: \"8\",\n      fontWeight: \"extrabold\",\n      size: \"xl\",\n      bgGradient: \"linear(to-br, red.600, red.500, blue.500, blue.300)\",\n      bgClip: \"text\",\n      children: \"Todo Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Todo, \"qGYUX3RNKe2Nupb/CLBNZen0QqU=\", false, function () {\n  return [useColorMode, useQuery, useMutation];\n});\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["E:/laragon/www/Work/Reactjs/crud_app/client/src/Component/Todo/Todo.tsx"],"names":["React","useState","useEffect","Heading","VStack","IconButton","useColorMode","TodoList","FaSun","FaMoon","useQuery","useMutation","GET_ALL_TODOS","DELETE_TODOS","Todo","colorMode","toggleColorMode","data","todos","setTodos","id","setId","searchTerm","setSearchTerm","deleteTodos","delTodo","delData","getAllTodos","deleteTodo","parseId","parseInt","variables","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,YAAtC,QAAuE,kBAAvE;AACA,SAASC,QAAT,QAA0B,YAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,gBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAQA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEtB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCV,YAAY,EAAnD;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWP,QAAQ,CAACE,aAAD,CAAzB;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,EAAD,EAAKC,KAAL,IAAcpB,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACuB,WAAD,EAAcC,OAAd,IAAyBd,WAAW,CAACE,YAAD,CAA1C;AACA,QAAMa,OAAO,GAAGD,OAAO,CAACR,IAAxB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGe,IAAH,EACA;AACIE,MAAAA,QAAQ,CAACF,IAAI,CAACU,WAAN,CAAR,CADJ,CAEI;AACH;AAEJ,GAPQ,EAON,CAACV,IAAD,CAPM,CAAT;;AASA,QAAMW,UAAU,GAAE,MAAOR,EAAP,IAClB;AACI;AACA,QAAIS,OAAO,GAAGC,QAAQ,CAACV,EAAD,CAAtB;AACA,UAAMI,WAAW,CAAC;AACdO,MAAAA,SAAS,EACT;AACIX,QAAAA,EAAE,EAAES;AADR;AAFc,KAAD,CAAjB;AAMAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GATJ,CAUI;AACH,GAZD;;AAcA,sBACI,QAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAA,4BACI,QAAC,UAAD;AACI,oBAAW,YADf;AAEI,MAAA,IAAI,EAAGnB,SAAS,KAAK,OAAd,gBAAwB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,gBAAkC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAF7C;AAGI,MAAA,OAAO,EAAE,IAHb;AAII,MAAA,IAAI,EAAC,IAJT;AAKI,MAAA,SAAS,EAAC,UALd;AAMI,MAAA,OAAO,EAAEC;AANb;AAAA;AAAA;AAAA;AAAA,YADJ,eASI,QAAC,OAAD;AACI,MAAA,EAAE,EAAC,GADP;AAEI,MAAA,UAAU,EAAC,WAFf;AAGI,MAAA,IAAI,EAAC,IAHT;AAII,MAAA,UAAU,EAAE,qDAJhB;AAKI,MAAA,MAAM,EAAC,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAiBI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAIE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAvDM;;GAAMJ,I;UAE8BR,Y,EACtBI,Q,EAKcC,W;;;KARtBG,I","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Heading, VStack, IconButton, useColorMode, extendTheme } from '@chakra-ui/react'\r\nimport { TodoList }  from \"./TodoList\"\r\nimport { FaSun, FaMoon } from \"react-icons/fa\";\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\r\nimport { DELETE_TODOS } from '../../Graphql/Mutation';\r\n\r\ninterface Todo\r\n{\r\n    id: number,\r\n    body: string\r\n}\r\n\r\nexport const Todo = () => {\r\n\r\n    const { colorMode, toggleColorMode } = useColorMode()\r\n    const { data } = useQuery(GET_ALL_TODOS)\r\n    const [todos, setTodos] = useState([])\r\n    const [id, setId] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n    const [deleteTodos, delTodo] = useMutation(DELETE_TODOS)\r\n    const delData = delTodo.data\r\n\r\n    useEffect(() => {\r\n        if(data)\r\n        {\r\n            setTodos(data.getAllTodos)\r\n            // setId(data.getAllTodos.id)\r\n        }\r\n        \r\n    }, [data])\r\n    \r\n    const deleteTodo =async (id: any) =>\r\n    {\r\n        // console.log(id)\r\n        let parseId = parseInt(id)\r\n        await deleteTodos({\r\n            variables:\r\n            {\r\n                id: parseId\r\n            }\r\n        })\r\n        window.location.reload()\r\n        // console.log(data)\r\n    }\r\n    \r\n    return (\r\n        <VStack p={4}>\r\n            <IconButton \r\n                aria-label=\"Night Mode\" \r\n                icon={ colorMode === 'light' ? <FaSun/>: <FaMoon/>} \r\n                isRound={true} \r\n                size=\"lg\" \r\n                alignSelf=\"flex-end\"\r\n                onClick={toggleColorMode}\r\n            />\r\n            <Heading \r\n                mb=\"8\" \r\n                fontWeight='extrabold' \r\n                size=\"xl\" \r\n                bgGradient= \"linear(to-br, red.600, red.500, blue.500, blue.300)\" \r\n                bgClip=\"text\"\r\n            >Todo Application\r\n            </Heading>\r\n            <TodoList todos = {todos}/>\r\n        </VStack>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}