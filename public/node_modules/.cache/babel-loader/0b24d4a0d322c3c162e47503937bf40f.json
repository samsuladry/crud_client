{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\Work\\\\Reactjs\\\\crud_app\\\\client\\\\src\\\\Component\\\\Todo\\\\TodoList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { VStack, Text, HStack, IconButton, StackDivider, Spacer } from '@chakra-ui/react';\nimport { FaTrash } from \"react-icons/fa\";\nimport { useQuery } from '@apollo/client';\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { useQuery, useMutation } from \"@apollo/client\" // use this to query from db\nexport const TodoList = () => {\n  _s();\n\n  const {\n    data\n  } = useQuery(GET_ALL_TODOS);\n  const [todos, setTodos] = useState([]); // const [deleteTodos, { error, data }] = useMutation(DELETE_TODOS)\n\n  useEffect(() => {\n    if (data) {\n      // console.log(data.getAllTodos)\n      setTodos(data.getAllTodos); // setTodos(data.getAllTodos[0])\n      // console.log(todos)\n    }\n\n    console.log(todos);\n  }, [data]);\n\n  const deleteTodo = async id => {\n    console.log(id); // let parseId = parseInt(id)\n    // await deleteTodos({\n    //     variables:\n    //     {\n    //         id: parseId\n    //     }\n    // })\n    // console.log(data)\n  }; // const [todos, setTodos] = useState(initialTodos)\n  // if(!todos.length)\n  // {\n  //     return(\n  //         <Badge colorScheme=\"green\" p='5' m='5' borderRadius='lg'>\n  //             No Todos\n  //         </Badge>\n  //     )\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 18\n      }, this),\n      borderColor: \"gray.300\",\n      borderWidth: \"2px\",\n      p: \"4\",\n      borderRadius: \"lg\",\n      width: \"100%\",\n      maxW: {\n        base: '90vw',\n        sm: '100vw',\n        lg: '150vw',\n        xl: '180vw'\n      },\n      alignItems: \"stretch\",\n      children: todos.map(todo => {\n        return /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: todo.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"Delete\",\n            icon: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 32\n            }, this),\n            isRound: true,\n            onClick: () => {\n              deleteTodo(todo.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"L+8r8rcrm/QgOVb6UBba4B/CR0o=\", false, function () {\n  return [useQuery];\n});\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/laragon/www/Work/Reactjs/crud_app/client/src/Component/Todo/TodoList.tsx"],"names":["React","useState","useEffect","VStack","Text","HStack","IconButton","StackDivider","Spacer","FaTrash","useQuery","GET_ALL_TODOS","TodoList","data","todos","setTodos","getAllTodos","console","log","deleteTodo","id","base","sm","lg","xl","map","todo","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,UAAtC,EAAkDC,YAAlD,EAAgEC,MAAhE,QAA8E,kBAA9E;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,QAAT,QAAsC,gBAAtC;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWH,QAAQ,CAACC,aAAD,CAAzB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC,CAF0B,CAI1B;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,IAAH,EACA;AACI;AACAE,MAAAA,QAAQ,CAACF,IAAI,CAACG,WAAN,CAAR,CAFJ,CAGI;AACA;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEH,GAVQ,EAUN,CAACD,IAAD,CAVM,CAAT;;AAYA,QAAMM,UAAU,GAAE,MAAOC,EAAP,IAClB;AACIH,IAAAA,OAAO,CAACC,GAAR,CAAYE,EAAZ,EADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXD,CAlB0B,CA+B1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACA;AAAA,2BACI,QAAC,MAAD;AACA,MAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADT;AAEA,MAAA,WAAW,EAAC,UAFZ;AAGA,MAAA,WAAW,EAAC,KAHZ;AAIA,MAAA,CAAC,EAAC,GAJF;AAKA,MAAA,YAAY,EAAC,IALb;AAMA,MAAA,KAAK,EAAC,MANN;AAOA,MAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE,OAApB;AAA6BC,QAAAA,EAAE,EAAE,OAAjC;AAA0CC,QAAAA,EAAE,EAAE;AAA9C,OAPN;AAQA,MAAA,UAAU,EAAC,SARX;AAAA,gBAUKV,KAAK,CAACW,GAAN,CAAWC,IAAD,IACX;AACI,4BACI,QAAC,MAAD;AAAA,kCACI,QAAC,IAAD;AAAA,sBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,UAAD;AACA,0BAAW,QADX;AAEA,YAAA,IAAI,eAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAFP;AAGA,YAAA,OAAO,EAAE,IAHT;AAIA,YAAA,OAAO,EAAI,MAAM;AAAGR,cAAAA,UAAU,CAACO,IAAI,CAACN,EAAN,CAAV;AAAqB;AAJzC;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAaM,IAAI,CAACN,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAWH,OAbA;AAVL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAkCH,CA5EM;;GAAMR,Q;UACQF,Q;;;KADRE,Q","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Badge, VStack, Text, HStack, IconButton, StackDivider, Spacer } from '@chakra-ui/react'\r\nimport { FaTrash } from \"react-icons/fa\";\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_ALL_TODOS } from '../../Graphql/Queries';\r\nimport { DELETE_TODOS } from '../../Graphql/Mutation';\r\n// import { useQuery, useMutation } from \"@apollo/client\" // use this to query from db\r\n\r\nexport const TodoList = () => {\r\n    const { data } = useQuery(GET_ALL_TODOS)\r\n    const [todos, setTodos] = useState([])\r\n\r\n    // const [deleteTodos, { error, data }] = useMutation(DELETE_TODOS)\r\n\r\n    useEffect(() => {\r\n        if(data)\r\n        {\r\n            // console.log(data.getAllTodos)\r\n            setTodos(data.getAllTodos)\r\n            // setTodos(data.getAllTodos[0])\r\n            // console.log(todos)\r\n        }\r\n        console.log(todos)\r\n        \r\n    }, [data])\r\n    \r\n    const deleteTodo =async (id: any) =>\r\n    {\r\n        console.log(id)\r\n        // let parseId = parseInt(id)\r\n        // await deleteTodos({\r\n        //     variables:\r\n        //     {\r\n        //         id: parseId\r\n        //     }\r\n        // })\r\n        // console.log(data)\r\n    }\r\n\r\n    // const [todos, setTodos] = useState(initialTodos)\r\n\r\n    // if(!todos.length)\r\n    // {\r\n    //     return(\r\n    //         <Badge colorScheme=\"green\" p='5' m='5' borderRadius='lg'>\r\n    //             No Todos\r\n    //         </Badge>\r\n    //     )\r\n    // }\r\n    \r\n    return( \r\n    <div>\r\n        <VStack\r\n        divider={<StackDivider />}\r\n        borderColor='gray.300'\r\n        borderWidth='2px'\r\n        p='4'\r\n        borderRadius='lg'\r\n        width=\"100%\"\r\n        maxW={{ base: '90vw', sm: '100vw', lg: '150vw', xl: '180vw' }}\r\n        alignItems='stretch'\r\n        >\r\n            {todos.map((todo: any) =>\r\n            {\r\n                return (\r\n                    <HStack key={todo.id}>\r\n                        <Text>{todo.body}</Text>\r\n                        <Spacer/>\r\n                        <IconButton \r\n                        aria-label=\"Delete\" \r\n                        icon={ <FaTrash/>}\r\n                        isRound={true}\r\n                        onClick = {() => {  deleteTodo(todo.id) }}/>\r\n                    </HStack>\r\n                )\r\n            })}\r\n            {/* {todos.map((val: any) =>\r\n            {\r\n                return <h1 key= {val.id}>{val.body}</h1>\r\n            })} */}\r\n        </VStack>\r\n    </div>\r\n    );\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}