{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\Work\\\\Reactjs\\\\crud_app\\\\client\\\\src\\\\Component\\\\ListOfUser.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GET_ALL_USER } from \"../Graphql/Queries\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { DELETE_USER } from '../Graphql/Mutation';\nimport { Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListOfUser() {\n  _s();\n\n  const [deleteThisUser, {\n    error,\n    data: data2\n  }] = useMutation(DELETE_USER);\n  const {\n    data\n  } = useQuery(GET_ALL_USER);\n\n  const deleteUser = async (name, password) => {\n    await deleteThisUser({\n      variables: {\n        name: name,\n        password: '$2b$10$r36Qrg8QGGA0HniW6O7F5eqNu3xcGIyQeltaT2P9V.l5WzuoLAnWa'\n      }\n    });\n    console.log(data2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.getAllUsers.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [user.name, \" / \", user.username, \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          size: \"md\",\n          colorScheme: \"red\",\n          onClick: () => deleteUser(user.name, user.password),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListOfUser, \"fGXLt9RJE6Bf3NlKmFxUfoWj5pw=\", false, function () {\n  return [useMutation, useQuery];\n});\n\n_c = ListOfUser;\nexport default ListOfUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfUser\");","map":{"version":3,"sources":["E:/laragon/www/Work/Reactjs/crud_app/client/src/Component/ListOfUser.tsx"],"names":["React","GET_ALL_USER","useQuery","useMutation","DELETE_USER","Button","ListOfUser","deleteThisUser","error","data","data2","deleteUser","name","password","variables","console","log","getAllUsers","map","user","username","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAAQC,MAAR,QAAqB,kBAArB;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAElB,QAAM,CAACC,cAAD,EAAiB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAI,EAAEC;AAAf,GAAjB,IAA2CP,WAAW,CAACC,WAAD,CAA5D;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWP,QAAQ,CAACD,YAAD,CAAzB;;AAEA,QAAMU,UAAU,GAAG,OAAOC,IAAP,EAAqBC,QAArB,KACnB;AACI,UAAMN,cAAc,CAAC;AACjBO,MAAAA,SAAS,EACT;AACIF,QAAAA,IAAI,EAAEA,IADV;AAEIC,QAAAA,QAAQ,EAAE;AAFd;AAFiB,KAAD,CAApB;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH,GAVD;;AAYA,sBACI;AAAA,cACKD,IAAI,IAAIA,IAAI,CAACQ,WAAL,CAAiBC,GAAjB,CAAsBC,IAAD,IAC9B;AACI,0BACI;AAAA,mBACKA,IAAI,CAACP,IADV,SACmBO,IAAI,CAACC,QADxB,uBAII,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,IAAb;AAAkB,UAAA,WAAW,EAAC,KAA9B;AAAoC,UAAA,OAAO,EAAI,MAAMT,UAAU,CAACQ,IAAI,CAACP,IAAN,EAAYO,IAAI,CAACN,QAAjB,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAYM,IAAI,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAVQ;AADb;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhCQf,U;UAE4CH,W,EAChCD,Q;;;KAHZI,U;AAkCT,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport { GET_ALL_USER } from \"../Graphql/Queries\"\r\nimport { useQuery, useMutation } from \"@apollo/client\"\r\nimport { DELETE_USER } from '../Graphql/Mutation'\r\nimport {Button} from '@chakra-ui/react'\r\n\r\n\r\nfunction ListOfUser() {\r\n\r\n    const [deleteThisUser, { error, data: data2 }] = useMutation(DELETE_USER)\r\n    const { data } = useQuery(GET_ALL_USER)\r\n\r\n    const deleteUser = async (name: string, password: string) =>\r\n    {\r\n        await deleteThisUser({\r\n            variables:\r\n            {\r\n                name: name,\r\n                password: '$2b$10$r36Qrg8QGGA0HniW6O7F5eqNu3xcGIyQeltaT2P9V.l5WzuoLAnWa',\r\n            }\r\n        })\r\n        console.log(data2)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {data && data.getAllUsers.map((user: any) => \r\n            {\r\n                return (\r\n                    <div key = {user.id}>\r\n                        {user.name} / {user.username} \r\n                        &nbsp;\r\n                        {/* <Button size=\"md\" colorScheme=\"red\" onClick= { () => deleteThisUser({ variables: { name: user.name, password: user.password} }) }>Delete</Button> */}\r\n                        <Button size=\"md\" colorScheme=\"red\" onClick= { () => deleteUser(user.name, user.password) }>Delete</Button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListOfUser\r\n"]},"metadata":{},"sourceType":"module"}